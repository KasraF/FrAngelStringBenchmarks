Starting synthesis...

=== remove_char ===
Successes: 10 / 10
Min time: 0.002 seconds
Max time: 10.837 seconds
Avg time: 1.141 seconds
Avg program size: 16.600
Programs:

static String remove_char(String s) {
    String var1 = "";
    for (int i1 = 0; s.regionMatches(true, i1, s, i1, 2); i1++) {
        var1 = String.valueOf(s.toCharArray(), 1, i1);
    }
    return var1;
}

static String remove_char(String s) {
    int i1 = 0;
    for (i1 = 0; s.regionMatches(1, s, 1, 2 + i1); i1++) {
    }
    return String.valueOf(s.toCharArray(), 1, i1);
}

static String remove_char(String s) {
    String var1 = "";
    for (int i1 = 0; s.regionMatches(i1, s, i1, 2); i1++) {
        var1 = new String(s.toCharArray(), 1, i1);
    }
    return var1;
}


=== dna_to_rna ===
Successes: 10 / 10
Min time: 0.000 seconds
Max time: 0.018 seconds
Avg time: 0.002 seconds
Avg program size: 5.700
Programs:

static String dna_to_rna(String dna) {
    dna = dna.replace('T', 'U');
    return dna;
}

static String dna_to_rna(String dna) {
    return dna.replace('T', 'U');
}

static String dna_to_rna(String dna) {
    String var1 = "";
    var1 = dna.replace('T', 'U');
    dna = var1;
    return dna;
}

static String dna_to_rna(String dna) {
    String var1 = "";
    var1 = dna.replace('T', 'U');
    return var1;
}


=== abbreviate ===
All 10 attempts failed.

=== number_to_string ===
Successes: 10 / 10
Min time: 0.000 seconds
Max time: 0.010 seconds
Avg time: 0.001 seconds
Avg program size: 2.000
Programs:

static String number_to_string(int num) {
    return String.valueOf(num);
}


=== string_to_number ===
All 10 attempts failed.

=== reverse_string ===
Successes: 10 / 10
Min time: 0.001 seconds
Max time: 1.418 seconds
Avg time: 0.158 seconds
Avg program size: 16.300
Programs:

static String reverse_string(String s) {
    String var1 = "";
    for (int i1 = 0; s.regionMatches(i1, s, i1, 1); i1++) {
        var1 = s.charAt(i1) + var1;
    }
    return var1;
}

static String reverse_string(String s) {
    String var1 = "";
    for (int i1 = 0; s.regionMatches(i1, s, i1, 1); i1++) {
        var1 = s.charAt(i1) + var1;
    }
    s = var1;
    return s;
}


=== reverse_words ===
All 10 attempts failed.

=== bonus_time ===
Successes: 9 / 10
Min time: 0.002 seconds
Max time: 6.270 seconds
Avg time: 0.707 seconds
Avg program size: 13.000
Programs:

static String bonus_time(int salary, boolean bonus) {
    String var1 = "";
    if (bonus) {
        var1 = String.valueOf(0);
    }
    return '$' + String.valueOf(salary) + var1;
}


=== fake_bin ===
All 10 attempts failed.
