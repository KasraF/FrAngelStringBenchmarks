Starting synthesis...

=== remove_char ===
Successes: 9 / 10
Min time: 0.001 seconds
Max time: 14.433 seconds
Avg time: 1.656 seconds
Avg program size: 16.444
Programs:

static String remove_char(String s) {
    int i1 = 0;
    for (i1 = 0; s.regionMatches(true, 1, s, 1, i1 + 2); i1++) {
    }
    s = new String(s.toCharArray(), 1, i1);
    return s;
}

static String remove_char(String s) {
    String var1 = "";
    for (int i1 = 0; s.regionMatches(true, i1, s, i1, 2); i1++) {
        var1 = new String(s.toCharArray(), 1, i1);
    }
    return var1;
}

static String remove_char(String s) {
    int i1 = 0;
    for (i1 = 0; s.regionMatches(1, s, 1, 2 + i1); i1++) {
    }
    return new String(s.toCharArray(), 1, i1);
}


=== dna_to_rna ===
Successes: 10 / 10
Min time: 0.000 seconds
Max time: 0.005 seconds
Avg time: 0.001 seconds
Avg program size: 4.000
Programs:

static String dna_to_rna(String dna) {
    return dna.replace('T', 'U');
}


=== abbreviate ===
Successes: 9 / 10
Min time: 0.001 seconds
Max time: 8.513 seconds
Avg time: 1.190 seconds
Avg program size: 22.778
Programs:

static String abbreviate(String name) {
    String var1 = "";
    for (int i1 = 0; !(' ' == name.charAt(i1)); i1++) {
        var1 = name.charAt(0) + ("." + name.charAt(i1 + 2));
    }
    name = var1;
    return name;
}

static String abbreviate(String name) {
    String var1 = "";
    for (int i1 = 0; !(' ' == name.charAt(i1)); i1++) {
        var1 = name.charAt(0) + ("." + name.charAt(i1 + 2));
    }
    return var1;
}

static String abbreviate(String name) {
    String var1 = "";
    for (int i1 = 0; !name.startsWith(" ", i1); i1++) {
        var1 = name.charAt(0) + ("." + name.charAt(i1 + 2));
    }
    return var1;
}

static String abbreviate(String name) {
    int i1 = 0;
    for (i1 = 0; ("." + name.charAt(i1 + 2)).toLowerCase().equals("." + name.charAt(i1 + 2)); i1++) {
    }
    return name.charAt(0) + ("." + name.charAt(i1 + 2));
}


=== number_to_string ===
Successes: 10 / 10
Min time: 0.000 seconds
Max time: 0.055 seconds
Avg time: 0.006 seconds
Avg program size: 3.000
Programs:

static String number_to_string(Integer num) {
    return String.valueOf(num.longValue());
}


=== string_to_number ===
Successes: 10 / 10
Min time: 0.000 seconds
Max time: 0.001 seconds
Avg time: 0.000 seconds
Avg program size: 2.000
Programs:

static Integer string_to_number(String num) {
    return Integer.decode(num);
}

static Integer string_to_number(String num) {
    return new Integer(num);
}


=== reverse_string ===
All 10 attempts failed.

=== reverse_words ===
All 10 attempts failed.

=== bonus_time ===
Successes: 10 / 10
Min time: 0.001 seconds
Max time: 0.840 seconds
Avg time: 0.096 seconds
Avg program size: 13.000
Programs:

static String bonus_time(int salary, boolean bonus) {
    String var1 = "";
    if (bonus) {
        var1 = String.valueOf(0);
    }
    return "$" + String.valueOf(salary) + var1;
}


=== fake_bin ===
All 10 attempts failed.
