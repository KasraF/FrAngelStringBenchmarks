Starting synthesis...

=== remove_char ===
Successes: 10 / 10
Min time: 0.002 seconds
Max time: 14.987 seconds
Avg time: 1.506 seconds
Avg program size: 18.900
Programs:

static String remove_char(String s) {
    int i1 = 0;
    for (i1 = 0; s.regionMatches(false, i1, s, i1, s.indexOf(" ")); i1++) {
    }
    return new String(s.toCharArray(), 1, i1 + 2);
}

static String remove_char(String s) {
    String var1 = "";
    for (int i1 = 0; s.regionMatches(false, i1, s, i1, var1.indexOf(" ")); i1++) {
        var1 = new String(s.toCharArray(), 1, i1 + 2);
    }
    return var1;
}

static String remove_char(String s) {
    String var1 = "";
    for (int i1 = 0; i1 + 1 < s.length(); i1++) {
        var1 = new String(s.toCharArray(), 1, i1);
    }
    return var1;
}


=== dna_to_rna ===
Successes: 10 / 10
Min time: 0.000 seconds
Max time: 0.042 seconds
Avg time: 0.005 seconds
Avg program size: 5.200
Programs:

static String dna_to_rna(String dna) {
    String var1 = "";
    var1 = dna.replace("T", String.valueOf('U'));
    return var1;
}

static String dna_to_rna(String dna) {
    return dna.replace("T", String.valueOf('U'));
}

static String dna_to_rna(String dna) {
    return dna.replace("T", "U");
}


=== abbreviate ===
All 10 attempts failed.

=== number_to_string ===
Successes: 10 / 10
Min time: 0.000 seconds
Max time: 0.014 seconds
Avg time: 0.002 seconds
Avg program size: 2.000
Programs:

static String number_to_string(int num) {
    return String.valueOf(num);
}


=== string_to_number ===
All 10 attempts failed.

=== reverse_string ===
Successes: 5 / 10
Min time: 0.006 seconds
Max time: 5.569 seconds
Avg time: 1.124 seconds
Avg program size: 15.800
Programs:

static String reverse_string(String s) {
    String var1 = "";
    for (int i1 = 0; !var1.startsWith("", s.length()); i1++) {
        var1 = s.toCharArray()[i1] + var1;
    }
    return var1;
}

static String reverse_string(String s) {
    String var1 = "";
    for (int i1 = 0; s.regionMatches(1, s, 1, i1); i1++) {
        var1 = s.charAt(i1) + var1;
    }
    return var1;
}

static String reverse_string(String s) {
    String var1 = "";
    for (int i1 = 0; i1 < s.length(); i1++) {
        var1 = s.charAt(i1) + var1;
    }
    return var1;
}


=== reverse_words ===
All 10 attempts failed.

=== bonus_time ===
Successes: 10 / 10
Min time: 0.003 seconds
Max time: 12.206 seconds
Avg time: 1.235 seconds
Avg program size: 13.000
Programs:

static String bonus_time(int salary, boolean bonus) {
    String var1 = "";
    if (bonus) {
        var1 = String.valueOf(0);
    }
    return '$' + String.valueOf(salary) + var1;
}


=== fake_bin ===
All 10 attempts failed.
